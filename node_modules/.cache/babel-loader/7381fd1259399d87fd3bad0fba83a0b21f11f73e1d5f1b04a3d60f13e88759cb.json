{"ast":null,"code":"var _jsxFileName = \"/home/george/moringa/code-challenge-4/src/components/Data.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Data() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    // Function to fetch items from the server\n    async function fetchData() {\n      try {\n        const response = await getTransactions();\n        setTransactions(response);\n        console.log(response); // Log the response data\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    }\n    fetchData(); // Call the async function\n  }, []); // Empty dependency array ensures the effect runs once after the initial render\n\n  // Function to fetch items from the server\n  function getTransactions() {\n    return fetch(\"http://localhost:3000/transactions\").then(response => response.json()).then(data => data);\n  }\n  const showData = transactions.map(transaction => {\n    /*#__PURE__*/_jsxDEV(\"transaction\", {\n      date: transaction.date,\n      description: transaction.description,\n      category: transaction.category,\n      amount: transaction.amount\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  });\n  {/* {transactions.map(transaction => (\n         <li key={transaction.id}>\n           {transaction.description} - {transaction.amount}\n         </li>\n       ))} */}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Categoty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Data, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Data","_s","transactions","setTransactions","fetchData","response","getTransactions","console","log","error","fetch","then","json","data","showData","map","transaction","date","description","category","amount","id","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/george/moringa/code-challenge-4/src/components/Data.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction Data() {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    // Function to fetch items from the server\n    async function fetchData() {\n      try {\n        const response = await getTransactions();\n        setTransactions(response);\n        console.log(response); // Log the response data\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    }\n\n    fetchData(); // Call the async function\n  }, []); // Empty dependency array ensures the effect runs once after the initial render\n\n  // Function to fetch items from the server\n  function getTransactions() {\n    return fetch(\"http://localhost:3000/transactions\")\n      .then(response => response.json())\n      .then(data => data);\n  }\n\n  const showData = transactions.map ((transaction)=> {\n        <transaction key = {transaction.id} date = {transaction.date} description = {transaction.description} category = {transaction.category} amount = {transaction.amount}/>\n  })\n   {/* {transactions.map(transaction => (\n          <li key={transaction.id}>\n            {transaction.description} - {transaction.amount}\n          </li>\n        ))} */}\n\n  return (\n    <div>\n      <h2>Transactions</h2>\n      <table>\n      <table>\n        <thead>\n          <tr>\n            <th>Date.{}</th>\n            <th>Amount.{}</th>\n            <th>Categoty</th>\n          </tr>\n        </thead>\n        </table>\n       \n      </table>\n    </div>\n  );\n}\n\nexport default Data;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd;IACA,eAAeQ,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,eAAe,CAAC,CAAC;QACxCH,eAAe,CAACE,QAAQ,CAAC;QACzBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;IAEAL,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,SAASE,eAAeA,CAAA,EAAG;IACzB,OAAOI,KAAK,CAAC,oCAAoC,CAAC,CAC/CC,IAAI,CAACN,QAAQ,IAAIA,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC,CACjCD,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;EACvB;EAEA,MAAMC,QAAQ,GAAGZ,YAAY,CAACa,GAAG,CAAGC,WAAW,IAAI;IAC7C,aAAAjB,OAAA;MAAoCkB,IAAI,EAAID,WAAW,CAACC,IAAK;MAACC,WAAW,EAAIF,WAAW,CAACE,WAAY;MAACC,QAAQ,EAAIH,WAAW,CAACG,QAAS;MAACC,MAAM,EAAIJ,WAAW,CAACI;IAAO,GAAjJJ,WAAW,CAACK,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoI,CAAC;EAC7K,CAAC,CAAC;EACD,CAAC;AACJ;AACA;AACA;AACA,aAJI;EAMF,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB1B,OAAA;MAAA2B,QAAA,eACA3B,OAAA;QAAA2B,QAAA,eACE3B,OAAA;UAAA2B,QAAA,eACE3B,OAAA;YAAA2B,QAAA,gBACE3B,OAAA;cAAA2B,QAAA,EAAI;YAAK;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChB1B,OAAA;cAAA2B,QAAA,EAAI;YAAO;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClB1B,OAAA;cAAA2B,QAAA,EAAI;YAAQ;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACxB,EAAA,CAnDQD,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAqDb,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}